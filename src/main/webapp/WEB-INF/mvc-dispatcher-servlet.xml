<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--指明 controller 所在包，并扫描其中的注解-->

    <context:component-scan base-package="com.jasonpiao.controller">
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter>-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"></context:include-filter>-->
    </context:component-scan>
    <context:component-scan base-package="com.jasonpiao.service"/>
    <!--<context:component-scan base-package="test1.*"/>-->
    <!--<context:component-scan base-package="com.gaussic">-->
    <!---->
    <!--</context:component-scan>-->
    <!--<bean id="courseService" class="com.gaussic.service.impl.CourseServiceImpl">-->
    <!--<property name="courseController" ref="courseController"></property>-->
    <!--</bean>-->
    <!--<bean id="courseController" class="com.gaussic.controller.CourseController">-->

    <!--</bean>-->
    <!-- 静态资源(js、image等)的访问 -->
    <mvc:default-servlet-handler/>

    <!-- 开启注解 -->
    <mvc:annotation-driven/>

    <!--ViewResolver 视图解析器-->
    <!--用于支持Servlet、JSP视图解析-->

    <!--&lt;!&ndash; 静态资源处理， css， js， imgs &ndash;&gt;-->
    <!--<mvc:resources mapping="/resources/**" location="/resources/" />-->

    <!--<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>-->
    <!-- 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->
    <!--<bean-->
    <!--class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
    <!--<property name="order" value="1" />-->
    <!--<property name="mediaTypes">-->
    <!--<map>-->
    <!--<entry key="json" value="application/json" />-->
    <!--<entry key="xml" value="application/xml" />-->
    <!--<entry key="htm" value="text/html" />-->
    <!--</map>-->
    <!--</property>-->

    <!--<property name="defaultViews">-->
    <!--<list>-->
    <!--&lt;!&ndash; JSON View &ndash;&gt;-->
    <!--<bean-->
    <!--class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">-->
    <!--</bean>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="ignoreAcceptHeader" value="true" />-->
    <!--</bean>-->

    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsps/" />
        <property name="suffix" value=".jsp" />
    </bean>


    <!--200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="resolveLazily" value="true" />
    </bean>

</beans>
